<?php

$pspell = pspell_new('en');
//        $this->tolerated = array_unique(array_merge($this->loadDict('extra.'.$this->language), 
//                                                    $this->loadDict('php'), // This one is common to languages
//                                                    $this->loadDict('personal.'.$this->language))); 

$files = glob('human/en/*/*.ini');

$stats[] = array();
foreach($files as $file) {
    $stats[] = processFile($file, $pspell);
}
$total = array_sum(array_column($stats, 'total'));
print "\nTotal mots :  $total\n";
$tolerated = array_sum(array_column($stats, 'tolerated'));
print "\nTotal tolerated :  $tolerated\n";
$errors = array_sum(array_column($stats, 'errors'));
print "\nTotal errors :  $errors\n";

function processFile($file, $pspell) {
    $ini = parse_ini_file($file, true);
    
    static $myWords;
    if (!isset($tolerated)) {   
        $myWords = file('./data/extraWords.txt', FILE_IGNORE_NEW_LINES);
    }
    
    $locale = 'en_EN';

    $i = IntlBreakIterator::createWordInstance($locale);
    $text = $ini['description'];
    for($j = 0; $j < 10; ++$j) {
        if (isset($ini["example$j"]["description"])) {
            $text .= ' '.$ini["example$j"]["description"];
        }
    }
    if (isset($ini["modifications"])) {
        $text .= ' '.implode('  ', $ini["modifications"]);
    }
    
    $text = preg_replace('/<\?php.*?\?>/s', '', $text);      // Remove PHP code 
    $text = preg_replace('/``[^`]+?``/s', '', $text);        // remove ``literals``
    $text = preg_replace('/`.+?`_+/s', '', $text);           // remove `links <url>`_
    $text = preg_replace('/[a-zA-Z_0-9]+\(\)/s', '', $text); // remove functioncalls()
    $text = preg_replace('/\'s\b/s', '', $text);             // remove 's 
    $text = preg_replace('/\$s[a-zA-Z_0-9]+\b/s', '', $text);// remove $variables

    $i->setText($text);

    $errors = 0;
    $total = 0;
    $tolerated = 0;
    foreach($i->getPartsIterator() as $word) {
        ++$total;
        if (!trim($word)) { continue; }
        if (in_array($word, [',', '(', ')', '.', ])) { continue; }
        if (preg_match('/^[0-9\.]+$/', $word)) { continue; }
        
        if (!pspell_check($pspell, $word)) {
            if (!in_array($word, $myWords)) {
                ++$errors;
                echo $word . ' '.implode(', ', pspell_suggest($pspell, $word)).PHP_EOL;
            } else {
                ++$tolerated;
            }
        }
    }
    
    print "$file : \n$total words, $tolerated tolerated, $errors errors.\n";
    return compact('total', 'tolerated', 'errors');
}