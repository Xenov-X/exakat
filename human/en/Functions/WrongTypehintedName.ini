name = "Wrong Typehinted Name";
description = "The parameter name doesn't reflect the typehint used.

There are no restriction on parameter names, except its uniqueness in the signature. Yet, using a scalar typehint as the name for another typehinted value is just misleading. 

<?php

function foo(string $array,
             int $int) {
    // doSomething()
}

function bar(array $strings) {
    // doSomething()
}

?>

The comparison relies on exact names : calling an array a list of ``strings`` is OK with this analysis.

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.0.2";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Rename "

; A PHP error that may be emitted by the target faulty code
;phpError[] = ""

; This is a safe guard, to find quickly missed docs
inited="Not yet";
