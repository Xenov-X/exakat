name = "No Class As Typehint";
description = "Avoid using whole classes as typehint. Always use interfaces, so that you may use different classes, or versions of classes. 

<?php

class X {
    function foo() {}
}

interface i {
    function foo();
}

// X is a class : any update in the code requires changing / subclassing X or the rest of the code.
function bar(X $x) {
    $x->foo();
}

// I is an interface : X may implements this interface without refactoring and pass
// later, newer versions of X may get another name, but still implement I, and still pass
function bar2(I $x) {
    $x->foo();
}

?>

See also `Type hinting for interfaces <http://phpenthusiast.com/object-oriented-php-tutorials/type-hinting-for-interfaces>`_.
";
clearphp = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "0.11.4";