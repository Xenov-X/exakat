name = "Could Be Static Closure";
description = "Closure may be static, and prevent the import of ``$this``. 

<?php

class Foo
{
    function __construct()
    {

        // Not possible to use $this
        $func = static function() {
            var_dump($this);
        };
        $func();

        // Normal import of $this
        $closure = function() {
            var_dump($this);
        };
    }
};
new Foo();

?>

See also `Anonymous functions <http://php.net/manual/en/functions.anonymous.php>`_ and 
         `Static anonymous functions <http://php.net/manual/en/functions.anonymous.php#functions.anonymous-functions.static>`_.
";
clearphp = "";
severity = "S_MINOR";
timetofix = "T_QUICK";
exakatSince = "1.3.2";

modifications[] = "Add the static keyword to the closure. "

[example1]
project="Piwigo"
file="include/ws_core.inc.php"
line="620"
code="  /**
   * WS reflection method implementation: lists all available methods
   */
  static function ws_getMethodList($params, &$service)
  {
    $methods = array_filter($service->_methods,
      function($m) { return empty($m[\"options\"][\"hidden\"]) || !$m[\"options\"][\"hidden\"];} );
    return array('methods' => new PwgNamedArray( array_keys($methods),'method' ) );
  }
";
explain="The closure function($m) makes no usage of the current object : using static prevents $this to be forwarded with the closure."
