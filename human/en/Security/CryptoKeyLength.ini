name = "Check Crypto Key Length";
description = "Each cryptographic algorithm requires a reasonable length. Make sure an up-to-date length is used. 

This rule use the following recommendations : 

+ \\OPENSSL_KEYTYPE_RSA' => 3072
+ \\OPENSSL_KEYTYPE_DSA' => 2048
+ \\OPENSSL_KEYTYPE_DH'  => 2048
+ \\OPENSSL_KEYTYPE_EC'  => 512

The values above are used with the openssl PHP extension. 

<?php

// Extracted from the documentation

// Generates a new and strong key 
$private_key = openssl_pkey_new(array(
    "private_key_type" => OPENSSL_KEYTYPE_EC,
    "private_key_bits" => 1024,
));

// Generates a new and weak key 
$private_key = openssl_pkey_new(array(
    "private_key_type" => OPENSSL_KEYTYPE_EC,
    "private_key_bits" => 256,
));

?>

See also `The Definitive 2019 Guide to Cryptographic Key Sizes and Algorithm Recommendations <https://paragonie.com/blog/2019/03/definitive-2019-guide-cryptographic-key-sizes-and-algorithm-recommendations>`_ and
        `Cryptographic Key Length Recommendation <https://www.keylength.com/>`_.
";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "2.1.1";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = ""

; A PHP error that may be emitted by the target faulty code
;phpError[] = ""

; Optional parameters
;[parameter1]
;name="parametersCount";
;default="8";
;type="integer";
;description="Minimal number of parameters to report.";


; This is a safe guard, to find quickly missed docs
inited="Not yet";
