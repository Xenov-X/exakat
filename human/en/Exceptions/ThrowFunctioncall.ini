name = "Throw Functioncall";
description = "The ``throw`` keyword expects to use an exception. Calling a function to prepare that exception before throwing it is possible, but forgetting the new keyword is also possible. 

<?php

// Forgotten new
throw \RuntimeException('error!');

// Code is OK, function returns an exception
throw getException(ERROR_TYPE, 'error!');

function getException(ERROR_TYPE, $message) {
    return new \RuntimeException($messsage);
}

?>

When the ``new`` keyword is forgotten, then the class constructor is used as a function name, and now exception is emitted, but an ``Undefined function`` fatal error is emitted. 

See also `Exceptions <http://php.net/manual/en/language.exceptions.php>`_.
";
clearphp = "";
exakatSince = "0.8.4";
phpError[] = "Call to undefined function"
[example1]
project="SugarCrm"
file="include/externalAPI/cmis_repository_wrapper.php"
line="918"
code="    function getContentChanges()
    {
        throw Exception(\"Not Implemented\");
    }
";
explain="SugarCRM uses exceptions to fill work in progress. Here, we recognize a forgotten 'new' that makes throw call a function named 'Exception'. This fails with a Fatal Error, and doesn't issue the right messsage. The same error had propgated in the code by copy and paste : it is available 17 times in that same file."
