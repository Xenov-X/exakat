name = "Could Not Type";
description = "Mark arguments, return types and properties that could not be typed.


Arguments, return types and properties that have no explicit typehint, and that could yield no guess from the following analysis, are deemed untypable. 

+ `Typehints/CouldBeCIT`_
+ `Typehints/CouldBeString`_
+ `Typehints/CouldBeArray`_
+ `Typehints/CouldBeBoolean`_
+ `Typehints/CouldBeVoid`_
+ `Typehints/CouldBeCallable`_

``mixed`` typehint, which acts as the universal typehint, is not processed here : it would yield little information.

There are situation which are not typeable, and legit : the example below is an illustration. ``array_fill`` is a native PHP example, where the second argument may be of any type. ``__get``and ``__set`` are also notoriously difficult to type, given the broad usage of arguments. 

<?php

// Accepts any input, and returns any input
// This may be used, but not typed.
function foo($b) {
    return $b;
}

?>
";
clearphp = "";
phpversion = "";
severity = "S_MAJOR";
timetofix = "T_QUICK";
exakatSince = "2.1.2";
