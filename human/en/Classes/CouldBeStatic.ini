name = "Method Could Be Static";
description = "A method that doesn't make any usage of $this could be turned into a static method. 

While static methods are usually harder to handle, recognizing the static status is a first step before turning the method into a standalone function.

<?php

class foo {
    static $property = 1;
    
    // legit static method
    static function staticMethod() {
        return self::$property;
    }

    // This is not using $this, and could be static
    function nonStaticMethod() {
        return self::$property;
    }

    // This is not using $this nor self, could be a standalone function
    function nonStaticMethod() {
        return self::$property;
    }
}

?>

";
clearphp = "";
severity = "S_MINOR";
; from : S_NONE, S_MINOR, S_MAJOR, S_CRITICAL
timetofix = "T_QUICK";
; from : T_INSTANT, T_QUICK, T_SLOW
exakatSince = "1.5.7";

; Alternative to make this code go away. 
; One by possible solution
modifications[] = "Make the method static"
modifications[] = "Make the method a standalone function"
modifications[] = "Make use of $this in the method : may be it was forgotten."

; A PHP error that may be emitted by the target faulty code
;phpError[] = ""
